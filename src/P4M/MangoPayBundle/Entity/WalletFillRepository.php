<?php

namespace P4M\MangoPayBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * WalletFillRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WalletFillRepository extends EntityRepository
{
    
    public function findAverageBalance()
    {
        $nextMonth = new \DateTime();
        $nextMonth->modify('+1 month');
        
        $today = new \DateTime();
        
        
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb->select('avg(w.amount)');
        $qb->from('P4MMangoPayBundle:WalletFill','w');
        $qb ->where('w.dateExpire>:today')
            ->setParameter('today', $today);
        $qb ->andWhere('w.dateExpire<:nextMonth')
            ->setParameter('nextMonth', $nextMonth);
        
        
        return $qb->getQuery()->getSingleScalarResult();
    }
    
    public function findActiveByUser(\P4M\UserBundle\Entity\User $user)
    {
        $qb = $this->createQueryBuilder('w');
        $qb ->where('w.user=:user')
            ->setParameter('user', $user)
            ->andWhere('w.expired=false')
//            ->setParameter('today', new \DateTime())
            ;
        
        try
        {
            return $qb->getQuery()->getOneOrNullResult();
        } catch (\Doctrine\ORM\NoResultException $ex) {
            return null;
        }   
        
    }
    
    public function findLastMonth()
    {
        $prevMonth = new \DateTime();
        $prevMonth->modify('-1 month');
        
//        $em = $this->getEntityManager();
        $qb = $this->createQueryBuilder('w');
        $qb ->where('w.date>:prevMonth')
            ->setParameter('prevMonth', $prevMonth);
        
        
        return $qb->getQuery()->getResult();
}
    
    
    
}
